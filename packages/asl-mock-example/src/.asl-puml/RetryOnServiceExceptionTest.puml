@startuml
hide empty description
skinparam ArrowColor #black
skinparam state {

    BackgroundColor<<Choice>> #whitesmoke
    FontColor<<Choice>> automatic

    BackgroundColor<<aslParallel>> #whitesmoke

    BackgroundColor<<aslTask>> #lightblue
    FontColor<<aslTask>> automatic
    BackgroundColor<<Compensate>> #orange
    FontColor<<CustomStyle0>> automatic
    BackgroundColor<<CustomStyle0>> #2b665e
    FontColor<<CustomStyle1>> automatic
    BackgroundColor<<CustomStyle1>> #2b665e
    FontColor<<CustomStyle2>> automatic
    BackgroundColor<<CustomStyle2>> #2b665e
    FontColor<<CustomStyle3>> automatic
    BackgroundColor<<CustomStyle3>> #2b665e
    FontColor<<CustomStyle4>> automatic
    BackgroundColor<<CustomStyle4>> #2b665e
    FontColor<<CustomStyle5>> automatic
    BackgroundColor<<CustomStyle5>> #86ea9f
    FontColor<<CustomStyle6>> automatic
    BackgroundColor<<CustomStyle6>> #86ea9f
    FontColor<<CustomStyle7>> gray
    BackgroundColor<<CustomStyle7>> #whitesmoke
}
state "Add to FollowUp" as state7<<CustomStyle0>>
state "CustomValidationFailed" as state6<<CustomStyle7>>
state "CustomerAddedToFollowup" as state8<<CustomStyle3>>
state "DetectSentiment" as state2<<CustomStyle4>>: <:warning:> <:warning:> <:warning:> <:white_check_mark:>
state "Is Positive \nSentiment?" as state4<<Choice>>
state "NegativeSentimentDetected" as state5<<CustomStyle7>>
state "Validation" as state1<<CustomStyle6>> {
state "Branch 1" as state1_1 {
state "Check Identity" as state9<<CustomStyle2>>
}
state "Branch 2" as state1_2 {
state "Check Address" as state10<<CustomStyle1>>
}
}
state "ValidationException" as state3<<CustomStyle7>>
[*] --> state1
state1 --> state2
state1 -[#lightgray]-> state6
state1 -[#lightgray]-> state3
state2 --> state4
state3 -[#lightgray]-> [*]
state4 --> state7
state4 -[#lightgray]-> state5
state5 -[#lightgray]-> [*]
state6 -[#lightgray]-> [*]
state7 --> state8
state8 --> [*]
@enduml
